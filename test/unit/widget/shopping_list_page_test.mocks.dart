// Mocks generated by Mockito 5.4.2 from annotations
// in go_list/test/snapshot/shopping_list_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:go_list/model/collections/shopping_list_collection.dart' as _i4;
import 'package:go_list/model/shopping_list.dart' as _i3;
import 'package:go_list/service/golist_client.dart' as _i5;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:web_socket_channel/web_socket_channel.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeShoppingList_1 extends _i1.SmartFake implements _i3.ShoppingList {
  _FakeShoppingList_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeShoppingListCollection_2 extends _i1.SmartFake
    implements _i4.ShoppingListCollection {
  _FakeShoppingListCollection_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GoListClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoListClient extends _i1.Mock implements _i5.GoListClient {
  MockGoListClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set webSocketChannel(_i6.WebSocketChannel? _webSocketChannel) =>
      super.noSuchMethod(
        Invocation.setter(
          #webSocketChannel,
          _webSocketChannel,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);

  @override
  String get deviceId => (super.noSuchMethod(
        Invocation.getter(#deviceId),
        returnValue: '',
      ) as String);

  @override
  set deviceId(String? _deviceId) => super.noSuchMethod(
        Invocation.setter(
          #deviceId,
          _deviceId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  _i7.Future<String> createTokenToShareList(String? shoppingListId) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTokenToShareList,
          [shoppingListId],
        ),
        returnValue: _i7.Future<String>.value(''),
      ) as _i7.Future<String>);

  @override
  _i7.Future<_i3.ShoppingList> joinListWithToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinListWithToken,
          [token],
        ),
        returnValue: _i7.Future<_i3.ShoppingList>.value(_FakeShoppingList_1(
          this,
          Invocation.method(
            #joinListWithToken,
            [token],
          ),
        )),
      ) as _i7.Future<_i3.ShoppingList>);

  @override
  _i7.Future<_i3.ShoppingList> getShoppingList(String? shoppingListId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getShoppingList,
          [shoppingListId],
        ),
        returnValue: _i7.Future<_i3.ShoppingList>.value(_FakeShoppingList_1(
          this,
          Invocation.method(
            #getShoppingList,
            [shoppingListId],
          ),
        )),
      ) as _i7.Future<_i3.ShoppingList>);

  @override
  _i7.Future<_i4.ShoppingListCollection> getShoppingLists() =>
      (super.noSuchMethod(
        Invocation.method(
          #getShoppingLists,
          [],
        ),
        returnValue: _i7.Future<_i4.ShoppingListCollection>.value(
            _FakeShoppingListCollection_2(
          this,
          Invocation.method(
            #getShoppingLists,
            [],
          ),
        )),
      ) as _i7.Future<_i4.ShoppingListCollection>);

  @override
  _i7.Future<void> upsertShoppingList(_i3.ShoppingList? shoppingList) =>
      (super.noSuchMethod(
        Invocation.method(
          #upsertShoppingList,
          [shoppingList],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteShoppingList(String? shoppingListId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteShoppingList,
          [shoppingListId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Stream<_i3.ShoppingList> listenForChanges(String? shoppingListId) =>
      (super.noSuchMethod(
        Invocation.method(
          #listenForChanges,
          [shoppingListId],
        ),
        returnValue: _i7.Stream<_i3.ShoppingList>.empty(),
      ) as _i7.Stream<_i3.ShoppingList>);
}
